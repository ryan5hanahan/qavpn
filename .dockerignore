# QAVPN Docker Build - Security-focused exclusions
# Prevents sensitive files from being included in Docker build context

# Version Control
.git
.gitignore
.gitattributes

# Documentation (exclude from production builds)
*.md
docs/
README*
CHANGELOG*
LICENSE*

# Development and Testing Files
*_test.go
*_test.*.go
test_*
*_bench.go
benchmark_*
testdata/
.test/

# IDE and Editor Files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Build Artifacts and Binaries
qavpn
*.exe
*.dll
*.so
*.dylib
*.a
*.o
/build/
/dist/
/target/

# Go specific
vendor/
go.work
go.work.sum

# Security and Audit Reports (sensitive information)
SECURITY_*
AUDIT_*
VULNERABILITY_*
*_SECURITY_*
*_AUDIT_*
COMPREHENSIVE_SECURITY_AUDIT_REPORT.md
OPSEC_IMPLEMENTATION_SUMMARY.md
PRIVACY_ENHANCEMENT_TASKS.md

# Configuration files that might contain secrets
.env
.env.*
config.local.*
*.key
*.pem
*.crt
*.p12
*.pfx
secrets/
private/

# Logs and temporary files
*.log
*.tmp
*.temp
/tmp/
/logs/
log/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Backup files
*.bak
*.backup
*.old
*~

# Development tools
Makefile.local
docker-compose.override.yml
docker-compose.local.yml

# CI/CD files (may contain sensitive info)
.github/
.gitlab-ci.yml
.travis.yml
.circleci/
Jenkinsfile

# Package manager files
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python (if any Python tools are used)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/

# Rust (if any Rust components)
target/
Cargo.lock

# Java (if any Java components)
*.class
*.jar
*.war
*.ear

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
cache/
.npm/
.yarn/

# Coverage reports
coverage/
*.cover
.coverage
.nyc_output

# Profiling data
*.prof
*.pprof

# Keep only essential files for Docker build
!go.mod
!go.sum
!*.go
!docker/
!Dockerfile
